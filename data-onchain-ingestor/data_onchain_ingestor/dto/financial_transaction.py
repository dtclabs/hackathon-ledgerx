from datetime import datetime
from typing import Optional

from pydantic import BaseModel, Field

from data_onchain_ingestor.config.chain import Chain
from data_onchain_ingestor.dto.financial_transaction_event_type import (
    FinancialTransactionEventType,
)


class FinancialTransaction(BaseModel):
    """
    Financial transaction data model that will be consumed by Product.
    """

    transaction_id: str
    hash: str
    block_number: int
    blockchain_id: Chain
    parser_version: str
    ordering_key: str = Field(description="Key to identify sequence of transactions")
    indexed_address: str = Field(
        description="Address that is used to index the transaction"
    )
    from_address: str
    to_address: str
    initiator_address: str = Field(
        description="Actual address that initiated the transaction"
    )
    cryptocurrency: str
    asset_id: str = Field(description="Asset ID generated by our platform")
    amount: str = Field(description="Amount after decimal is applied", min_length=1)
    value_at: str
    event_type: FinancialTransactionEventType
    timestamp: datetime
    metadata: Optional[str] = None
