/*
LedgerX Public API

## Introduction  The LedgerX API provides endpoints for synchronizing on-chain wallets, retrieving normalized financial transactions, and managing wallets, wallet groups, organization members, and the accounting system (Chart of Accounts).  - **Security**: All endpoints (unless otherwise specified) require an **API_KEY**   in the request header. - **Rate Limit**: Depends on the user’s subscription plan. See details on the   subscriptions page. - **Compute Unit (CU)**: Each API consumes a specific number of CUs, which are   deducted from your monthly total.  **Useful Links**: - Rate limit: https://ledgerx.finance/subscriptions - Compute Unit: https://ledgerx.finance/subscriptions  > Note: Some CU and rate limit descriptions are for documentation purposes only. Actual limits are applied based on the user’s subscription plan. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgerx

import (
	"encoding/json"
)

// checks if the ListWalletGroups200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWalletGroups200ResponseDataInner{}

// ListWalletGroups200ResponseDataInner struct for ListWalletGroups200ResponseDataInner
type ListWalletGroups200ResponseDataInner struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	WalletsSize *int32 `json:"walletsSize,omitempty"`
	SupportedBlockchains []string `json:"supportedBlockchains,omitempty"`
}

// NewListWalletGroups200ResponseDataInner instantiates a new ListWalletGroups200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWalletGroups200ResponseDataInner() *ListWalletGroups200ResponseDataInner {
	this := ListWalletGroups200ResponseDataInner{}
	return &this
}

// NewListWalletGroups200ResponseDataInnerWithDefaults instantiates a new ListWalletGroups200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWalletGroups200ResponseDataInnerWithDefaults() *ListWalletGroups200ResponseDataInner {
	this := ListWalletGroups200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListWalletGroups200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWalletGroups200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListWalletGroups200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListWalletGroups200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListWalletGroups200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWalletGroups200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListWalletGroups200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListWalletGroups200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetWalletsSize returns the WalletsSize field value if set, zero value otherwise.
func (o *ListWalletGroups200ResponseDataInner) GetWalletsSize() int32 {
	if o == nil || IsNil(o.WalletsSize) {
		var ret int32
		return ret
	}
	return *o.WalletsSize
}

// GetWalletsSizeOk returns a tuple with the WalletsSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWalletGroups200ResponseDataInner) GetWalletsSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.WalletsSize) {
		return nil, false
	}
	return o.WalletsSize, true
}

// HasWalletsSize returns a boolean if a field has been set.
func (o *ListWalletGroups200ResponseDataInner) HasWalletsSize() bool {
	if o != nil && !IsNil(o.WalletsSize) {
		return true
	}

	return false
}

// SetWalletsSize gets a reference to the given int32 and assigns it to the WalletsSize field.
func (o *ListWalletGroups200ResponseDataInner) SetWalletsSize(v int32) {
	o.WalletsSize = &v
}

// GetSupportedBlockchains returns the SupportedBlockchains field value if set, zero value otherwise.
func (o *ListWalletGroups200ResponseDataInner) GetSupportedBlockchains() []string {
	if o == nil || IsNil(o.SupportedBlockchains) {
		var ret []string
		return ret
	}
	return o.SupportedBlockchains
}

// GetSupportedBlockchainsOk returns a tuple with the SupportedBlockchains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWalletGroups200ResponseDataInner) GetSupportedBlockchainsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedBlockchains) {
		return nil, false
	}
	return o.SupportedBlockchains, true
}

// HasSupportedBlockchains returns a boolean if a field has been set.
func (o *ListWalletGroups200ResponseDataInner) HasSupportedBlockchains() bool {
	if o != nil && !IsNil(o.SupportedBlockchains) {
		return true
	}

	return false
}

// SetSupportedBlockchains gets a reference to the given []string and assigns it to the SupportedBlockchains field.
func (o *ListWalletGroups200ResponseDataInner) SetSupportedBlockchains(v []string) {
	o.SupportedBlockchains = v
}

func (o ListWalletGroups200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWalletGroups200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.WalletsSize) {
		toSerialize["walletsSize"] = o.WalletsSize
	}
	if !IsNil(o.SupportedBlockchains) {
		toSerialize["supportedBlockchains"] = o.SupportedBlockchains
	}
	return toSerialize, nil
}

type NullableListWalletGroups200ResponseDataInner struct {
	value *ListWalletGroups200ResponseDataInner
	isSet bool
}

func (v NullableListWalletGroups200ResponseDataInner) Get() *ListWalletGroups200ResponseDataInner {
	return v.value
}

func (v *NullableListWalletGroups200ResponseDataInner) Set(val *ListWalletGroups200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListWalletGroups200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListWalletGroups200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWalletGroups200ResponseDataInner(val *ListWalletGroups200ResponseDataInner) *NullableListWalletGroups200ResponseDataInner {
	return &NullableListWalletGroups200ResponseDataInner{value: val, isSet: true}
}

func (v NullableListWalletGroups200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWalletGroups200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


