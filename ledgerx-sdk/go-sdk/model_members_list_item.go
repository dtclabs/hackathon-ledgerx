/*
LedgerX Public API

## Introduction  The LedgerX API provides endpoints for synchronizing on-chain wallets, retrieving normalized financial transactions, and managing wallets, wallet groups, organization members, and the accounting system (Chart of Accounts).  - **Security**: All endpoints (unless otherwise specified) require an **API_KEY**   in the request header. - **Rate Limit**: Depends on the user’s subscription plan. See details on the   subscriptions page. - **Compute Unit (CU)**: Each API consumes a specific number of CUs, which are   deducted from your monthly total.  **Useful Links**: - Rate limit: https://ledgerx.finance/subscriptions - Compute Unit: https://ledgerx.finance/subscriptions  > Note: Some CU and rate limit descriptions are for documentation purposes only. Actual limits are applied based on the user’s subscription plan. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgerx

import (
	"encoding/json"
	"time"
)

// checks if the MembersListItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembersListItem{}

// MembersListItem struct for MembersListItem
type MembersListItem struct {
	AccountName *string `json:"accountName,omitempty"`
	AuthName *string `json:"authName,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	AccountImage NullableString `json:"accountImage,omitempty"`
	Role *string `json:"role,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id *string `json:"id,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
}

// NewMembersListItem instantiates a new MembersListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembersListItem() *MembersListItem {
	this := MembersListItem{}
	return &this
}

// NewMembersListItemWithDefaults instantiates a new MembersListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembersListItemWithDefaults() *MembersListItem {
	this := MembersListItem{}
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *MembersListItem) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersListItem) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *MembersListItem) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *MembersListItem) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAuthName returns the AuthName field value if set, zero value otherwise.
func (o *MembersListItem) GetAuthName() string {
	if o == nil || IsNil(o.AuthName) {
		var ret string
		return ret
	}
	return *o.AuthName
}

// GetAuthNameOk returns a tuple with the AuthName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersListItem) GetAuthNameOk() (*string, bool) {
	if o == nil || IsNil(o.AuthName) {
		return nil, false
	}
	return o.AuthName, true
}

// HasAuthName returns a boolean if a field has been set.
func (o *MembersListItem) HasAuthName() bool {
	if o != nil && !IsNil(o.AuthName) {
		return true
	}

	return false
}

// SetAuthName gets a reference to the given string and assigns it to the AuthName field.
func (o *MembersListItem) SetAuthName(v string) {
	o.AuthName = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *MembersListItem) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersListItem) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *MembersListItem) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *MembersListItem) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *MembersListItem) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersListItem) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *MembersListItem) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *MembersListItem) SetLastName(v string) {
	o.LastName = &v
}

// GetAccountImage returns the AccountImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MembersListItem) GetAccountImage() string {
	if o == nil || IsNil(o.AccountImage.Get()) {
		var ret string
		return ret
	}
	return *o.AccountImage.Get()
}

// GetAccountImageOk returns a tuple with the AccountImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MembersListItem) GetAccountImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountImage.Get(), o.AccountImage.IsSet()
}

// HasAccountImage returns a boolean if a field has been set.
func (o *MembersListItem) HasAccountImage() bool {
	if o != nil && o.AccountImage.IsSet() {
		return true
	}

	return false
}

// SetAccountImage gets a reference to the given NullableString and assigns it to the AccountImage field.
func (o *MembersListItem) SetAccountImage(v string) {
	o.AccountImage.Set(&v)
}
// SetAccountImageNil sets the value for AccountImage to be an explicit nil
func (o *MembersListItem) SetAccountImageNil() {
	o.AccountImage.Set(nil)
}

// UnsetAccountImage ensures that no value is present for AccountImage, not even an explicit nil
func (o *MembersListItem) UnsetAccountImage() {
	o.AccountImage.Unset()
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *MembersListItem) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersListItem) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *MembersListItem) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *MembersListItem) SetRole(v string) {
	o.Role = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MembersListItem) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersListItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MembersListItem) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *MembersListItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MembersListItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersListItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MembersListItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MembersListItem) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *MembersListItem) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersListItem) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *MembersListItem) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *MembersListItem) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

func (o MembersListItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembersListItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.AuthName) {
		toSerialize["authName"] = o.AuthName
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if o.AccountImage.IsSet() {
		toSerialize["accountImage"] = o.AccountImage.Get()
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	return toSerialize, nil
}

type NullableMembersListItem struct {
	value *MembersListItem
	isSet bool
}

func (v NullableMembersListItem) Get() *MembersListItem {
	return v.value
}

func (v *NullableMembersListItem) Set(val *MembersListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMembersListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMembersListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembersListItem(val *MembersListItem) *NullableMembersListItem {
	return &NullableMembersListItem{value: val, isSet: true}
}

func (v NullableMembersListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembersListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


