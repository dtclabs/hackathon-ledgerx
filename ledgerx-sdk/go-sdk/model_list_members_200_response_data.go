/*
LedgerX Public API

## Introduction  The LedgerX API provides endpoints for synchronizing on-chain wallets, retrieving normalized financial transactions, and managing wallets, wallet groups, organization members, and the accounting system (Chart of Accounts).  - **Security**: All endpoints (unless otherwise specified) require an **API_KEY**   in the request header. - **Rate Limit**: Depends on the user’s subscription plan. See details on the   subscriptions page. - **Compute Unit (CU)**: Each API consumes a specific number of CUs, which are   deducted from your monthly total.  **Useful Links**: - Rate limit: https://ledgerx.finance/subscriptions - Compute Unit: https://ledgerx.finance/subscriptions  > Note: Some CU and rate limit descriptions are for documentation purposes only. Actual limits are applied based on the user’s subscription plan. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgerx

import (
	"encoding/json"
)

// checks if the ListMembers200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMembers200ResponseData{}

// ListMembers200ResponseData struct for ListMembers200ResponseData
type ListMembers200ResponseData struct {
	TotalItems *int32 `json:"totalItems,omitempty"`
	TotalPages *int32 `json:"totalPages,omitempty"`
	CurrentPage *int32 `json:"currentPage,omitempty"`
	Items []MembersListItem `json:"items,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
}

// NewListMembers200ResponseData instantiates a new ListMembers200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMembers200ResponseData() *ListMembers200ResponseData {
	this := ListMembers200ResponseData{}
	return &this
}

// NewListMembers200ResponseDataWithDefaults instantiates a new ListMembers200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMembers200ResponseDataWithDefaults() *ListMembers200ResponseData {
	this := ListMembers200ResponseData{}
	return &this
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *ListMembers200ResponseData) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMembers200ResponseData) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *ListMembers200ResponseData) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *ListMembers200ResponseData) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *ListMembers200ResponseData) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMembers200ResponseData) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *ListMembers200ResponseData) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *ListMembers200ResponseData) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise.
func (o *ListMembers200ResponseData) GetCurrentPage() int32 {
	if o == nil || IsNil(o.CurrentPage) {
		var ret int32
		return ret
	}
	return *o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMembers200ResponseData) GetCurrentPageOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentPage) {
		return nil, false
	}
	return o.CurrentPage, true
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *ListMembers200ResponseData) HasCurrentPage() bool {
	if o != nil && !IsNil(o.CurrentPage) {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given int32 and assigns it to the CurrentPage field.
func (o *ListMembers200ResponseData) SetCurrentPage(v int32) {
	o.CurrentPage = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListMembers200ResponseData) GetItems() []MembersListItem {
	if o == nil || IsNil(o.Items) {
		var ret []MembersListItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMembers200ResponseData) GetItemsOk() ([]MembersListItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListMembers200ResponseData) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []MembersListItem and assigns it to the Items field.
func (o *ListMembers200ResponseData) SetItems(v []MembersListItem) {
	o.Items = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ListMembers200ResponseData) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMembers200ResponseData) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ListMembers200ResponseData) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *ListMembers200ResponseData) SetLimit(v int32) {
	o.Limit = &v
}

func (o ListMembers200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListMembers200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalItems) {
		toSerialize["totalItems"] = o.TotalItems
	}
	if !IsNil(o.TotalPages) {
		toSerialize["totalPages"] = o.TotalPages
	}
	if !IsNil(o.CurrentPage) {
		toSerialize["currentPage"] = o.CurrentPage
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	return toSerialize, nil
}

type NullableListMembers200ResponseData struct {
	value *ListMembers200ResponseData
	isSet bool
}

func (v NullableListMembers200ResponseData) Get() *ListMembers200ResponseData {
	return v.value
}

func (v *NullableListMembers200ResponseData) Set(val *ListMembers200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableListMembers200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableListMembers200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMembers200ResponseData(val *ListMembers200ResponseData) *NullableListMembers200ResponseData {
	return &NullableListMembers200ResponseData{value: val, isSet: true}
}

func (v NullableListMembers200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMembers200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


