/*
LedgerX Public API

## Introduction  The LedgerX API provides endpoints for synchronizing on-chain wallets, retrieving normalized financial transactions, and managing wallets, wallet groups, organization members, and the accounting system (Chart of Accounts).  - **Security**: All endpoints (unless otherwise specified) require an **API_KEY**   in the request header. - **Rate Limit**: Depends on the user’s subscription plan. See details on the   subscriptions page. - **Compute Unit (CU)**: Each API consumes a specific number of CUs, which are   deducted from your monthly total.  **Useful Links**: - Rate limit: https://ledgerx.finance/subscriptions - Compute Unit: https://ledgerx.finance/subscriptions  > Note: Some CU and rate limit descriptions are for documentation purposes only. Actual limits are applied based on the user’s subscription plan. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgerx

import (
	"encoding/json"
)

// checks if the ListChartOfAccounts200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListChartOfAccounts200ResponseDataInner{}

// ListChartOfAccounts200ResponseDataInner struct for ListChartOfAccounts200ResponseDataInner
type ListChartOfAccounts200ResponseDataInner struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Code *string `json:"code,omitempty"`
	Type *string `json:"type,omitempty"`
	Description *string `json:"description,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewListChartOfAccounts200ResponseDataInner instantiates a new ListChartOfAccounts200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListChartOfAccounts200ResponseDataInner() *ListChartOfAccounts200ResponseDataInner {
	this := ListChartOfAccounts200ResponseDataInner{}
	return &this
}

// NewListChartOfAccounts200ResponseDataInnerWithDefaults instantiates a new ListChartOfAccounts200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListChartOfAccounts200ResponseDataInnerWithDefaults() *ListChartOfAccounts200ResponseDataInner {
	this := ListChartOfAccounts200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListChartOfAccounts200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListChartOfAccounts200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListChartOfAccounts200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListChartOfAccounts200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListChartOfAccounts200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListChartOfAccounts200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListChartOfAccounts200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListChartOfAccounts200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ListChartOfAccounts200ResponseDataInner) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListChartOfAccounts200ResponseDataInner) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ListChartOfAccounts200ResponseDataInner) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ListChartOfAccounts200ResponseDataInner) SetCode(v string) {
	o.Code = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListChartOfAccounts200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListChartOfAccounts200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ListChartOfAccounts200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListChartOfAccounts200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ListChartOfAccounts200ResponseDataInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListChartOfAccounts200ResponseDataInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ListChartOfAccounts200ResponseDataInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ListChartOfAccounts200ResponseDataInner) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListChartOfAccounts200ResponseDataInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListChartOfAccounts200ResponseDataInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ListChartOfAccounts200ResponseDataInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListChartOfAccounts200ResponseDataInner) SetStatus(v string) {
	o.Status = &v
}

func (o ListChartOfAccounts200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListChartOfAccounts200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableListChartOfAccounts200ResponseDataInner struct {
	value *ListChartOfAccounts200ResponseDataInner
	isSet bool
}

func (v NullableListChartOfAccounts200ResponseDataInner) Get() *ListChartOfAccounts200ResponseDataInner {
	return v.value
}

func (v *NullableListChartOfAccounts200ResponseDataInner) Set(val *ListChartOfAccounts200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListChartOfAccounts200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListChartOfAccounts200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListChartOfAccounts200ResponseDataInner(val *ListChartOfAccounts200ResponseDataInner) *NullableListChartOfAccounts200ResponseDataInner {
	return &NullableListChartOfAccounts200ResponseDataInner{value: val, isSet: true}
}

func (v NullableListChartOfAccounts200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListChartOfAccounts200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


